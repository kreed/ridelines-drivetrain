name: Build and Deploy Lambda

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'terraform/**'
      - '.github/workflows/infrastructure.yml'
      - '*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'terraform/**'
      - '.github/workflows/infrastructure.yml'
      - '*.md'
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-rust:
    name: Test Rust Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Rust toolchain with Cargo Lambda
      uses: moonrepo/setup-rust@v1
      with:
        bins: cargo-lambda

    - name: Run tests
      run: cargo test

    - name: Run clippy
      run: cargo clippy -- -D warnings

    - name: Check formatting
      run: cargo fmt --check

  build:
    name: Build Lambda Package
    runs-on: ubuntu-latest
    needs: test-rust
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Rust toolchain with Cargo Lambda
      uses: moonrepo/setup-rust@v1
      with:
        bins: cargo-lambda

    - name: Install Zig toolchain
      uses: mlugg/setup-zig@v2
      with:
        version: 0.14.1

    - name: Build Lambda function
      run: cargo lambda build --release --output-format zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lambda-deployment-package-${{ github.sha }}
        path: target/lambda
        retention-days: 7

  deploy:
    name: Deploy Lambda Function
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: lambda-deployment-package-${{ github.sha }}
        path: target/lambda/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: ${{ github.run_id }}

    - name: Setup OpenTofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: "1.8.1"

    - name: Initialize OpenTofu
      working-directory: terraform
      run: tofu init

    - name: Deploy Lambda function
      working-directory: terraform
      run: tofu apply -auto-approve -target=aws_lambda_function.intervals_mapper

    - name: Deployment summary
      run: |
        echo "## Lambda Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "✅ Lambda function deployed successfully" >> $GITHUB_STEP_SUMMARY
        echo "📦 Package: lambda-deployment-package-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "🌐 AWS Region: ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
        echo "🚀 Deployed from commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

