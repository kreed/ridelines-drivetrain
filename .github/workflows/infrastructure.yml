name: Deploy Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
  workflow_dispatch:

env:
  AWS_REGION: us-west-2

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: Deploy AWS Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: "1.8.1"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: ${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download latest lambda artifact
        uses: actions/download-artifact@v5
        with:
          pattern: lambda-deployment-package-*
          path: target/lambda/
          merge-multiple: true

      - name: OpenTofu Format Check
        run: tofu fmt -check

      - name: Initialize OpenTofu
        run: tofu init

      - name: Validate configuration
        run: tofu validate

      - name: Plan infrastructure changes
        run: tofu plan -out=tfplan

      - name: Apply infrastructure changes
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: tofu apply -auto-approve tfplan

      - name: Upload plan for PR
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan
          retention-days: 5

      - name: Comment plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');
            
            try {
              const planOutput = execSync('cd terraform && tofu show -no-color tfplan', { encoding: 'utf8' });
              const truncatedPlan = planOutput.length > 65000 ? 
                planOutput.substring(0, 65000) + '\n...\n*Plan output truncated*' : 
                planOutput;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## Infrastructure Plan\n\`\`\`\n${truncatedPlan}\n\`\`\``
              });
            } catch (error) {
              console.error('Error generating plan comment:', error);
            }

      - name: Infrastructure summary
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "## Infrastructure Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Infrastructure deployed successfully" >> $GITHUB_STEP_SUMMARY
          echo "🏗️ OpenTofu version: $(tofu version)" >> $GITHUB_STEP_SUMMARY
          echo "🌐 AWS Region: ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY