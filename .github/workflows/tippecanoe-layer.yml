name: Build Tippecanoe Layer

on:
  push:
    paths:
      - '.github/workflows/tippecanoe-layer.yml'
  workflow_dispatch:
    inputs:
      tippecanoe_version:
        description: 'Tippecanoe version/branch to build'
        required: true
        default: 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kreed/ridelines-tippecanoe-layer

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-layer:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout tippecanoe
      uses: actions/checkout@v5
      with:
        repository: felt/tippecanoe
        ref: ${{ github.event.inputs.tippecanoe_version || 'main' }}
        path: tippecanoe
    
    - name: Get tippecanoe commit SHA
      id: tippecanoe_sha
      run: |
        cd tippecanoe
        COMMIT_SHA=$(git rev-parse HEAD)
        echo "sha=${COMMIT_SHA}" >> $GITHUB_OUTPUT
        echo "Tippecanoe commit SHA: ${COMMIT_SHA}"
    
    - name: Create Dockerfile
      run: |
        cat > Dockerfile.layer << 'EOF'
        # Build stage
        FROM public.ecr.aws/lambda/provided:al2023 AS builder
        
        # Install build dependencies
        RUN dnf update -y && \
            dnf install -y gcc-c++ make sqlite-devel zlib-devel
        
        # Copy tippecanoe source
        COPY tippecanoe /build/tippecanoe
        
        # Build tippecanoe
        WORKDIR /build/tippecanoe
        RUN make
        
        # Copy binaries and dependencies
        RUN mkdir -p /layer/bin /layer/lib
        RUN cp tippecanoe /layer/bin/
        RUN ldd /layer/bin/tippecanoe | grep "=> /" | awk '{print $3}' | xargs -I '{}' cp '{}' /layer/lib/ || true
        
        # Make binaries executable
        RUN chmod +x /layer/bin/*
        
        # Create layer zip
        WORKDIR /layer
        RUN zip -r /tippecanoe-layer.zip .
        
        # Final stage - package for GHCR
        FROM scratch
        COPY --from=builder /tippecanoe-layer.zip /layer-package.zip
        EOF
        
        echo "Tippecanoe layer Dockerfile created"

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=tippecanoe-${{ steps.tippecanoe_sha.outputs.sha }}
          type=raw,value=latest

    - name: Build and push container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.layer
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: |
          ${{ steps.meta.outputs.labels }}
          ridelines.tippecanoe.commit=${{ steps.tippecanoe_sha.outputs.sha }}
        build-args: |
          TIPPECANOE_VERSION=${{ github.event.inputs.tippecanoe_version || 'main' }}
